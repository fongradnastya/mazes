# файл test_generate.py
import pytest
from pytest_mock import MockerFixture
from maze import generate, find_path


# Указываем, какие аргументы и значения нужно передать в функцию тесты.
@pytest.mark.parametrize(
    argnames=[
        "height",
        "width",
        "maze",  # ожидаемый лабиринт
        "solution",  # ожидаемое решение лабиринта
    ],
    argvalues=[
        [  # тестовый случай 1
            3,  # высота
            3,  # ширина
            [
                ['█', '█', '█', '█', '█', '█', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', ' ', ' ', ' ', ' ', '█'],
                ['█', '█', '█', '█', '█', '█', '█']
            ],
            (
                (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (5, 2),
                (5, 3), (5, 4), (5, 5)
            )
        ],
        [  # тестовый случай 2
            2,  # высота
            4,  # ширина
            [
                ['█', '█', '█', '█', '█', '█', '█', '█', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', '█', ' ', '█', ' ', '█', ' ', '█'],
                ['█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '█'],
                ['█', '█', '█', '█', '█', '█', '█', '█', '█']
            ],
            (  # решение лабиринта
                (1, 1), (2, 1), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5),
                (3, 6), (3, 7)
            )
        ],
        [  # тестовый случай 3
            1,  # высота
            1,  # ширина
            [  # лабиринт
                ['█', '█', '█'],
                ['█', ' ', '█'],
                ['█', '█', '█']
            ],
            (  # решение лабиринта
                (1, 1),
            ),
        ],
    ]
)
def test_generation_and_solution(mocker: MockerFixture, height: int, width: int,
                                 maze: list, solution: list) -> None:
    """
    Функция для тестирования генерации и решения лабиринта.
    :param mocker: Позволяет подменять результаты других функций на фиктивные
    :param height: Высота
    :param width: Ширина
    :param maze: Ожидаемый лабиринт
    :param solution: Ожидаемое решение
    :return: None
    """
    mocker.patch(
        "random.randint",
        # подменяем функцию генерации случайных чисел на фиксированную
        side_effect=lambda a, b: b
        # возвращаем всегда максимальное значение из диапазона
        # Это нужно для того, чтобы генерация лабиринта была детерминированной
        # и не зависела от случайности.
    )
    actual_maze = generate(width, height)
    # вызываем функцию с заданными параметрами
    actual_solution = find_path(actual_maze)
    # вызываем функцию поиска решения с полученным лабиринтом
    assert all([maze == actual_maze, solution == actual_solution])
